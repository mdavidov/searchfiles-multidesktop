/****************************************************************************
**
** Copyright (c) 2010 Milivoj (Mike) Davidov
** All rights reserved.
**
** THE SOFTWARE IS PROVIDED "AS IS," WITHOUT WARRANTY OF ANY KIND.
** COPYRIGHT HOLDER FURTHER DISCLAIMS ANY IMPLIED WARRANTIES, INCLUDING, WITHOUT
** LIMITATION, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
** PARTICULAR PURPOSE, AND NONINFRINGEMENT. THE ENTIRE RISK ARISING OUT OF THE
** USE OR PERFORMANCE OF THE SOFTWARE REMAINS WITH YOU. SHOULD THE SOFTWARE
** PROVE DEFECTIVE, YOU (AND NOT COPYRIGHT HOLDER) ASSUME THE ENTIRE COST OF ALL
** NECESSARY SERVICING OR REPAIR.
**
** IN NO EVENT SHALL COPYRIGHT HOLDER OR ANYONE ELSE INVOLVED IN THE CREATION,
** PRODUCTION, MARKETING, DISTRIBUTION, OR DELIVERY OF THE SOFTWARE, BE LIABLE
** FOR ANY DAMAGES WHATSOEVER; INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS
** OF BUSINESS PROFITS, FOR BUSINESS INTERRUPTION, FOR LOSS OF BUSINESS
** INFORMATION, OR FOR OTHER MONETARY LOSS, ARISING OUT OF THE USE OF THE
** SOFTWARE OR THE INABILITY TO USE THE SOFTWARE, EVEN IF YOU HAVE BEEN NOTIFIED
** OF THE POSSIBILITY OF SUCH DAMAGES.
**
** IN NO EVENT SHALL COPYRIGHT HOLDER BE LIABLE FOR ANY SPECIAL, INDIRECT, OR
** CONSEQUENTIAL DAMAGES, OR FOR ANY DAMAGES WHATSOEVER, WHETHER IN A CONTRACT
** ACTION, NEGLIGENCE OR OTHER TORT ACTION, OR OTHER CLAIM OR ACTION, ARISING
** OUT OF, OR IN CONNECTION WITH, THE USE OR PERFORMANCE OF THE SOFTWARE OR
** DOCUMENTS AND OTHER INFORMATION PROVIDED TO YOU BY COPYRIGHT HOLDER, OR IN THE
** PROVISION OF, OR FAILURE TO PROVIDE, SERVICES OR INFORMATION.
**
****************************************************************************/
#ifndef _OVERSKYS_UTIL_H
#define _OVERSKYS_UTIL_H

#include "precompiled.h"
#include "config.h"
#include <QtGlobal>
#include <QString>

QT_BEGIN_NAMESPACE
QT_END_NAMESPACE

namespace Overskys
{
    /// @brief Formats the string (@p humanReadable) with human readable value of @p size in B, KB, MB, GB, or TB.
    bool sizeToHumanReadable( quint64 size, QString & humanReadable);

    ///
    QString elapsedTimeToStr( qint64 elapsedMilSec);

    ///
    void indicateErrorDbg( const QString & text);
}

#endif
